{
  "stats": {
    "suites": 3,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2023-07-31T03:05:04.050Z",
    "end": "2023-07-31T03:06:57.694Z",
    "duration": 113644,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c698648d-af3a-4094-ac21-db009a54033a",
      "title": "",
      "fullFile": "cypress\\e2e\\verification.cy.js",
      "file": "cypress\\e2e\\verification.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f717eeee-5708-479a-a2ad-7b6b22b497d1",
          "title": "New Investors Register",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a64124c9-c6fc-40f0-9dfc-58d730188b84",
              "title": "Verification Identity",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "New users want to verification their account but without input all required field",
                  "fullTitle": "New Investors Register Verification Identity New users want to verification their account but without input all required field",
                  "timedOut": null,
                  "duration": 19702,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "\"videos/verification.cy.js.mp4\"",
                  "code": "// Login\nloginFunction.loginCorrect(email, pass);\ncy.get('h3').contains('My Identity').parent().find('p').then($el => {\n  const textVerif = $el.text();\n  if (!textVerif.includes('Not Verified')) {\n    cy.log('Already Verified');\n    return;\n  } else {\n    // Klik tombol verify now pada my identity\n    cy.get('a[href=\"/identity\"] > button').contains('Verify Now').click();\n    cy.wait(2000);\n    // Assert membuka halaman yang sesuai\n    cy.url().should('include', '/identity');\n    cy.get('h1').contains('Identity Verification Request').should('be.visible');\n    // Langsung klik tombol submit\n    cy.get('button').contains('Submit').click();\n    cy.wait(2000);\n    // Assert adanya validasi\n    cy.get('h2').contains('Incomplete Data!').should('be.visible');\n    cy.get('button').contains('Oke').click();\n    cy.wait(1000);\n  }\n});",
                  "err": {},
                  "uuid": "977c860e-e951-4bf5-9646-426d68672213",
                  "parentUUID": "a64124c9-c6fc-40f0-9dfc-58d730188b84",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "New users want to verification their account but input wrong format images files",
                  "fullTitle": "New Investors Register Verification Identity New users want to verification their account but input wrong format images files",
                  "timedOut": null,
                  "duration": 20425,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "\"videos/verification.cy.js.mp4\"",
                  "code": "// Login\nloginFunction.loginCorrect(email, pass);\ncy.get('h3').contains('My Identity').parent().find('p').then($el => {\n  const textVerif = $el.text();\n  if (!textVerif.includes('Not Verified')) {\n    cy.log('Already Verified');\n    return;\n  } else {\n    // Klik tombol verify now pada my identity\n    cy.get('a[href=\"/identity\"] > button').contains('Verify Now').click();\n    cy.wait(2000);\n    // Assert membuka halaman yang sesuai\n    cy.url().should('include', '/identity');\n    cy.get('h1').contains('Identity Verification Request').should('be.visible');\n    // Input field jenis ID\n    cy.get('select[name=\"type\"] > option').then($el => {\n      commonFunction.randomDropdownValue('select[name=\"type\"]', $el);\n    });\n    // Input field ID Number\n    const numberID = commonFunction.randomNumberID();\n    cy.get('input[id=\"id-number\"]').type(numberID).should('have.value', numberID);\n    // Input field file dengan value yang tidak sesuai\n    cy.get('input[type=\"file\"]').selectFile('cypress/fixtures/pdfExample.pdf');\n    cy.wait(2000);\n    // Assert pop up error muncul\n    cy.get('h2').contains('Your file is not an image').should('be.visible');\n    cy.get('button').contains('OK').click();\n  }\n});",
                  "err": {},
                  "uuid": "eb8f7cf0-6b77-4423-8968-3643f9ae3205",
                  "parentUUID": "a64124c9-c6fc-40f0-9dfc-58d730188b84",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "New users want to verification their identity account with correct value",
                  "fullTitle": "New Investors Register Verification Identity New users want to verification their identity account with correct value",
                  "timedOut": null,
                  "duration": 18612,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "\"videos/verification.cy.js.mp4\"",
                  "code": "// Login\nloginFunction.loginCorrect(email, pass);\ncy.get('h3').contains('My Identity').parent().find('p').then($el => {\n  const textVerif = $el.text();\n  if (!textVerif.includes('Not Verified')) {\n    cy.log('Already Verified');\n    return;\n  } else {\n    // Klik tombol verify now pada my identity\n    cy.get('a[href=\"/identity\"] > button').contains('Verify Now').click();\n    cy.wait(2000);\n    // Assert membuka halaman yang sesuai\n    cy.url().should('include', '/identity');\n    cy.get('h1').contains('Identity Verification Request').should('be.visible');\n    // Input field jenis ID\n    cy.get('select[name=\"type\"] > option').then($el => {\n      commonFunction.randomDropdownValue('select[name=\"type\"]', $el);\n    });\n    // Input field ID Number\n    const numberID = commonFunction.randomNumberID();\n    cy.get('input[id=\"id-number\"]').type(numberID).should('have.value', numberID);\n    // Input field file dengan value yang sesuai\n    cy.get('input[type=\"file\"]').selectFile('cypress/fixtures/PicExample.png');\n    cy.wait(2000);\n    // Klik submit\n    cy.get('button').contains('Submit').click();\n    cy.wait(1000);\n    // Klik Yes di verify identity pop up\n    cy.get('button').contains('Yes').click();\n    cy.wait(4000);\n    // Assert sukses send request approve identity\n    cy.get('h1').contains('Pending Verification').should('be.visible');\n    cy.url().should('include', '/verify-pending');\n    // Buka login admin staging untuk approval verification\n    approvalAdminFunction.approvalIdentity(numberID);\n    // Buka primecodex staging kembali dan login\n    cy.visit(Cypress.env('STAGING_URL'));\n    cy.wait(3000);\n    loginFunction.loginCorrect(email, pass);\n    // Check status verified identity\n    cy.get('a[href=\"/identity\"]').parent().find('button').contains('Verified').should('be.visible');\n  }\n});",
                  "err": {},
                  "uuid": "37571c38-df16-4e4a-8f63-3b8cc52bd29b",
                  "parentUUID": "a64124c9-c6fc-40f0-9dfc-58d730188b84",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "977c860e-e951-4bf5-9646-426d68672213",
                "eb8f7cf0-6b77-4423-8968-3643f9ae3205",
                "37571c38-df16-4e4a-8f63-3b8cc52bd29b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 58739,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4c5cfd4e-e1ac-494d-b402-ad784b968925",
              "title": "Verification POA",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Users want to verify their POA request but without fill any field",
                  "fullTitle": "New Investors Register Verification POA Users want to verify their POA request but without fill any field",
                  "timedOut": null,
                  "duration": 16792,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "\"videos/verification.cy.js.mp4\"",
                  "code": "// Login\nloginFunction.loginCorrect(email, pass);\ncy.get('h3').contains('Proof of Address').parent().find('p').then($el => {\n  const textVerif = $el.text();\n  if (!textVerif.includes('Not Verified')) {\n    cy.log('Already Verified');\n    return;\n  } else {\n    // Klik tombol verify now pada proof of address\n    cy.get('a[href=\"/verify-poa\"] > button').contains('Verify Now').click();\n    cy.wait(2000);\n    // Assert membuka halaman yang sesuai\n    cy.url().should('include', '/verify-poa');\n    cy.get('h1').contains('Proof of Address Request').should('be.visible');\n    // Langsung klik tombol submit\n    cy.get('button').contains('Submit').click();\n    cy.wait(2000);\n    // Assert adanya validasi\n    cy.get('h2').contains('Incomplete Data!').should('be.visible');\n    cy.get('button').contains('Oke').click();\n    cy.wait(1000);\n  }\n});",
                  "err": {},
                  "uuid": "59c3c41a-1707-49df-9afe-e7a6698e023f",
                  "parentUUID": "4c5cfd4e-e1ac-494d-b402-ad784b968925",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Users want to verify their POA request but with invalid format file",
                  "fullTitle": "New Investors Register Verification POA Users want to verify their POA request but with invalid format file",
                  "timedOut": null,
                  "duration": 17565,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "\"videos/verification.cy.js.mp4\"",
                  "code": "// Login\nloginFunction.loginCorrect(email, pass);\ncy.get('h3').contains('Proof of Address').parent().find('p').then($el => {\n  const textVerif = $el.text();\n  if (!textVerif.includes('Not Verified')) {\n    cy.log('Already Verified');\n    return;\n  } else {\n    // Klik tombol verify now pada proof of address\n    cy.get('a[href=\"/verify-poa\"] > button').contains('Verify Now').click();\n    cy.wait(2000);\n    // Assert membuka halaman yang sesuai\n    cy.url().should('include', '/verify-poa');\n    cy.get('h1').contains('Proof of Address Request').should('be.visible');\n    // Input field jenis ID\n    cy.get('div[class=\"menu hidden\"] > div').then($el => {\n      // Pilih dropdown dan ambil number index item yang dipilih\n      const number = commonFunction.randomDropdownValueDivPOA($el);\n      // Ambil string item div\n      cy.get($el[number]).invoke('text').then($txt => {\n        // Kondisi berdasarkan input yang diberikan\n        if ($txt == 'Bank or Credit Card Statement') {\n          // Input field bank number\n          const numberID = commonFunction.randomNumberID();\n          cy.get('input[name=\"bank-number\"]').type(numberID).should('have.value', numberID);\n          // Input nama bank\n          cy.get('div[class=\"menu hidden\"]').eq(1).find('div').then($el2 => {\n            // Pilih dropdown dan ambil number index item yang dipilih\n            commonFunction.randomDropdownValueDivPOA($el2);\n          });\n          // Input bank account name\n          const randChar = commonFunction.randomChar();\n          cy.get('input[name=\"account-name\"]').eq(0).type(randChar).should('have.value', randChar);\n          cy.wait(1000);\n          // Input notes\n          const randChar2 = commonFunction.randomChar();\n          cy.get('input[name=\"account-name\"]').eq(1).type(randChar2).should('have.value', randChar2);\n          cy.wait(1000);\n        } else if ($txt == 'Other') {\n          // Input other explaination\n          const randChar = commonFunction.randomChar();\n          cy.get('input[placeholder=\"Explain...\"]').type(randChar).should('have.value', randChar);\n          // Input notes\n          const randChar2 = commonFunction.randomChar();\n          cy.get('input[name=\"account-name\"]').type(randChar2).should('have.value', randChar2);\n          cy.wait(1000);\n        } else {\n          // Input notes\n          const randChar = commonFunction.randomChar();\n          cy.get('input[name=\"account-name\"]').type(randChar).should('have.value', randChar);\n          cy.wait(1000);\n        }\n      });\n    });\n    // Input field file dengan value yang tidak sesuai\n    cy.get('input[type=\"file\"]').selectFile('cypress/fixtures/pdfExample.pdf');\n    cy.wait(2000);\n    // Assert pop up error muncul\n    cy.get('h2').contains('Your file is not an image').should('be.visible');\n    cy.get('button').contains('OK').click();\n  }\n});",
                  "err": {},
                  "uuid": "4f3171f9-c137-4f3c-935d-f51176838e05",
                  "parentUUID": "4c5cfd4e-e1ac-494d-b402-ad784b968925",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Users want to verify their POA request but with correct value",
                  "fullTitle": "New Investors Register Verification POA Users want to verify their POA request but with correct value",
                  "timedOut": null,
                  "duration": 17112,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "\"videos/verification.cy.js.mp4\"",
                  "code": "// Login\nloginFunction.loginCorrect(email, pass);\ncy.get('h3').contains('Proof of Address').parent().find('p').then($el => {\n  const textVerif = $el.text();\n  if (!textVerif.includes('Not Verified')) {\n    cy.log('Already Verified');\n    return;\n  } else {\n    // Klik tombol verify now pada proof of address\n    cy.get('a[href=\"/verify-poa\"] > button').contains('Verify Now').click();\n    cy.wait(2000);\n    // Assert membuka halaman yang sesuai\n    cy.url().should('include', '/verify-poa');\n    cy.get('h1').contains('Proof of Address Request').should('be.visible');\n    // Input field jenis ID\n    cy.get('div[class=\"menu hidden\"] > div').then($el => {\n      // Pilih dropdown dan ambil number index item yang dipilih\n      const number = commonFunction.randomDropdownValueDivPOA($el);\n      // Ambil string item div\n      cy.get($el[number]).invoke('text').then($txt => {\n        // Kondisi berdasarkan input yang diberikan\n        if ($txt == 'Bank or Credit Card Statement') {\n          // Input field bank number\n          const numberID = commonFunction.randomNumberID();\n          cy.get('input[name=\"bank-number\"]').type(numberID).should('have.value', numberID);\n          // Input nama bank\n          cy.get('div[class=\"menu hidden\"]').eq(1).find('div').then($el2 => {\n            // Pilih dropdown dan ambil number index item yang dipilih\n            commonFunction.randomDropdownValueDivPOA($el2);\n          });\n          // Input bank account name\n          const randChar = commonFunction.randomChar();\n          cy.get('input[name=\"account-name\"]').eq(0).type(randChar).should('have.value', randChar);\n          cy.wait(1000);\n          // Input notes\n          const randChar2 = commonFunction.randomChar();\n          cy.get('input[name=\"account-name\"]').eq(1).type(randChar2).should('have.value', randChar2);\n          cy.wait(1000);\n        } else if ($txt == 'Other') {\n          // Input other explaination\n          const randChar = commonFunction.randomChar();\n          cy.get('input[placeholder=\"Explain...\"]').type(randChar).should('have.value', randChar);\n          // Input notes\n          const randChar2 = commonFunction.randomChar();\n          cy.get('input[name=\"account-name\"]').type(randChar2).should('have.value', randChar2);\n          cy.wait(1000);\n        } else {\n          // Input notes\n          const randChar = commonFunction.randomChar();\n          cy.get('input[name=\"account-name\"]').type(randChar).should('have.value', randChar);\n          cy.wait(1000);\n        }\n      });\n    });\n    // Input field file dengan value yang sesuai\n    cy.get('input[type=\"file\"]').selectFile('cypress/fixtures/PicExample.png');\n    cy.wait(2000);\n    // Klik submit\n    cy.get('button').contains('Submit').click();\n    cy.wait(1000);\n    // Klik Yes di verify identity pop up\n    cy.get('button').contains('Yes').click();\n    cy.wait(4000);\n    // Assert sukses send request approve identity\n    cy.get('h1').contains('Pending Verification').should('be.visible');\n    cy.url().should('include', '/verify-pending');\n    // Approve request POA dari admin\n    approvalAdminFunction.approvalPOA();\n    // Buka primecodex staging kembali dan login\n    cy.visit(Cypress.env('STAGING_URL'));\n    cy.wait(3000);\n    loginFunction.loginCorrect(email, pass);\n    // Check status verified identity\n    cy.get('a[href=\"/verify-poa\"]').parent().parent().find('p').contains('Verified').should('be.visible');\n  }\n});",
                  "err": {},
                  "uuid": "9e106cc1-b6b3-4825-a47d-bedad8461f4a",
                  "parentUUID": "4c5cfd4e-e1ac-494d-b402-ad784b968925",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "59c3c41a-1707-49df-9afe-e7a6698e023f",
                "4f3171f9-c137-4f3c-935d-f51176838e05",
                "9e106cc1-b6b3-4825-a47d-bedad8461f4a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 51469,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/json",
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": "longDate",
        "charts": true
      },
      "version": "6.2.0"
    }
  }
}